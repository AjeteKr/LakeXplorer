@page "/lake/{Id:int}"
@using LakeXplorerBlazor.Data
@inject IApiService ApiService

<h3>View Sightings for Lake @Id</h3>

@if (LakeSightings != null && LakeSightings.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Longitude</th>
                <th>Latitude</th>
                <th>Image</th>
                <th>Fun Fact</th>
                <th>User Id</th>
                <th>Lake Id</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sighting in LakeSightings)
            {
                <tr>
                    <td>@sighting.Id</td>
                    <td>@sighting.Longitude</td>
                    <td>@sighting.Latitude</td>
                    <td>
                        @if (!string.IsNullOrEmpty(sighting.CloudinaryAssetId))
                        {
                            <img src="@($"https://res.cloudinary.com/djiicjy1v/image/upload/{sighting.CloudinaryAssetId}")" alt="Sighting Image" style="max-width: 100px; max-height: 100px;" />
                        }
                    </td>
                    <td>@sighting.FunFact</td>
                    <td>@sighting.UserId</td>
                    <td>@sighting.LakeId</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No sightings available for this lake.</p>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private List<LakeSightingDto> LakeSightings { get; set; }

    protected override async Task OnInitializedAsync()
    {
        LakeSightings = await ApiService.HttpGET<List<LakeSightingDto>>($"api/Lakes/{Id}");
    }
}
